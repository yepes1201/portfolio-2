---
// Components
import { Icon } from "astro-icon/components";

// Services
import { getNavItems } from "../lib/utils/api.utils";

const { lang } = Astro.params;
const { data } = await getNavItems(lang);
---

<header
  class="fixed top-0 left-0 w-full py-8 px-4 md:px-12 bg-primary-4 border-b border-primary-3 z-50 shadow-sm"
>
  <div class="container mx-auto flex justify-between items-center">
    <a href="/">
      <h1 class="font-satoshi text-2xl text-primary-1 font-bold">DY</h1>
    </a>
    <nav class="hidden sm:flex gap-4 items-center font-satoshi text-lg">
      {
        data.map((item: any) => {
          return item.translations.map((i: any) => {
            return (
              <a href={`/${lang}${item.ref}`} class={`hover:underline`}>
                {i.name}
              </a>
            );
          });
        })
      }
      <select id="language-select">
        <option value="es">ES</option>
        <option value="en">EN</option>
      </select>
    </nav>
    <div
      class="cursor-pointer border border-primary-2 rounded-md p-1 sm:hidden"
    >
      <Icon name="menu-hamburger" class="w-6 h-6" />
    </div>
  </div>
  <div id="mobile-menu" class="mt-4 pt-4 hidden animate-slideDown border-t">
    <nav class="flex flex-col gap-4 items-center font-satoshi text-lg">
      <a href=`/${lang}` class=`w-full hover:underline`>Home</a>
      <a href=`/${lang}/about` class=`w-full hover:underline`>About me</a>
      <a href=`/${lang}/projects` class=`w-full hover:underline`>Projects</a>
      <a href=`/${lang}/#footer` class=`w-full hover:underline`>Contact</a>
      <a href="#" class="w-full hover:underline opacity-50 cursor-not-allowed"
        >Blog</a
      >
      <select id="language-select">
        <option value="es">ES</option>
        <option value="en">EN</option>
      </select>
    </nav>
  </div>
</header>

<style>
  .animate-slideDown {
    transition: all 0.5s ease;
    animation: slideDown 0.5s ease;
  }

  @keyframes slideDown {
    0% {
      opacity: 0;
      visibility: hidden;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }
  }
</style>

<script>
  const menu = document.getElementById("mobile-menu");
  const menuToggle = document.querySelector(".border");
  const navLinks = document.querySelectorAll("nav a");

  if (menuToggle && menu) {
    menuToggle.addEventListener("click", () => {
      menu.classList.toggle("hidden");
    });

    navLinks.forEach((link) => {
      link.addEventListener("click", () => {
        menu.classList.add("hidden");
      });
    });
  }

  const currentLang = window.location.pathname.split("/")[1];
  const select = document.getElementById(
    "language-select"
  ) as HTMLSelectElement;
  if (select) {
    select.value = currentLang;
    select.addEventListener("change", (event) => {
      const target = event.target as HTMLSelectElement;
      const selectedLang = target.value;
      const currentPath = window.location.pathname;
      const newPath = currentPath.replace(
        /\/([a-z]{2})\//,
        `/${selectedLang}/`
      );
      const url = new URL(window.location.href);
      url.pathname = newPath;
      window.location.href = url.href;
    });
  }
</script>
