---
// Components
import Button from "./utils/Button.astro";
import { Icon } from "astro-icon/components";
---

<footer id="footer" class="bg-primary-1 text-primary-4 rounded-t-[40px]">
  <div class="container mx-auto w-full flex flex-col gap-8 px-12 pt-32 pb-8">
    <div class="flex gap-8 justify-between flex-col md:flex-row">
      <h3 class="text-4xl md:text-8xl lg:text-9xl md:max-w-[100px] self-center">
        Let's talk
      </h3>
      <form class="flex flex-col gap-4 md:gap-6 md:w-1/3 font-satoshi">
        <p id="form-result" class="font-bold p-3 rounded-lg invisible">
          Get in touch
        </p>
        <div class="flex flex-col gap-1">
          <label class="text-primary-3 text-xl md:text-3xl" for="name"
            >Name</label
          >
          <input
            class="bg-transparent pb-2 border-primary-2 border-b text-base md:text-2xl placeholder:text-primary-2 focus:outline-none"
            type="text"
            id="name"
            name="name"
            placeholder="Your name"
          />
        </div>
        <div class="flex flex-col gap-1">
          <label class="text-primary-3 text-xl md:text-3xl" for="subject"
            >Subject</label
          >
          <input
            class="bg-transparent pb-2 border-primary-2 border-b text-base md:text-2xl placeholder:text-primary-2 focus:outline-none"
            type="text"
            id="subject"
            name="subject"
            placeholder="Subject"
          />
        </div>
        <div class="flex flex-col gap-1">
          <label class="text-primary-3 text-xl md:text-3xl" for="email"
            >Email</label
          >
          <input
            class="bg-transparent pb-2 border-primary-2 border-b text-base md:text-2xl placeholder:text-primary-2 focus:outline-none"
            type="email"
            id="email"
            name="email"
            placeholder="example@mail.com"
          />
        </div>
        <div class="flex flex-col gap-1">
          <label class="text-primary-3 text-xl md:text-3xl" for="email"
            >Message</label
          >
          <textarea
            class="bg-transparent pb-2 border-primary-2 border rounded-2xl resize-none h-[200px] p-2 text-lg md:text-xl placeholder:text-primary-2 focus:outline-none font-satoshi"
            id="message"
            name="message"
            placeholder="Brief description of your project"></textarea>
        </div>
        <div class="self-center w-full sm:w-fit sm:self-end">
          <Button
            type="submit"
            containerClass="w-full sm:w-fit justify-center sm:justify-start"
            class="flex items-center gap-2 sm:w-fit w-full justify-center sm:justify-start text-base md:text-xl"
          >
            Send form
            <Icon class="w-5 h-5 md:h-6 md:w-6" name="mail-open" />
          </Button>
        </div>
      </form>
    </div>
    <hr class="border-primary-2 w-full" />
    <div
      class="flex gap-8 justify-between text-primary-3 font-satoshi items-center md:items-start flex-col md:flex-row"
    >
      <span>Â© {new Date().getFullYear()} Daniel Yepes</span>
      <!-- <span class="hover:cursor-copy">dev@danielyepes.com</span> -->
      <div class="flex gap-4">
        <a
          href="https://www.linkedin.com/in/daniel-yepes-094757228/"
          target="_blank"
          class="hover:underline">LinkedIn</a
        >
        <a
          href="https://github.com/yepes1201/"
          target="_blank"
          class="hover:underline">GitHub</a
        >
        <a
          href="https://x.com/daniely1201"
          target="_blank"
          class="hover:underline">X (Twitter)</a
        >
      </div>
    </div>
  </div>
</footer>

<script>
  import { actions } from "astro:actions";

  const form = document.querySelector("form");
  const result = document.getElementById("form-result");
  if (form && result) {
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(form);
      const entries = Object.fromEntries([...formData.entries()]);

      if (Object.values(entries).some((value) => !value)) {
        result.classList.remove("bg-green-300/60", "text-green-900");
        result.classList.add("bg-red-300/60", "text-red-900");
        result.innerHTML = "All fields are required";
        result.classList.remove("invisible");
        return;
      }

      const { error } = await actions.send(formData);

      if (error) {
        result.classList.remove("bg-green-300/60", "text-green-900");
        result.classList.add("bg-red-300/60", "text-red-900");
        result.innerHTML = error.message;
        result.classList.remove("invisible");
        return;
      }

      result.classList.remove("bg-red-300/60", "text-red-900");
      result.classList.add("bg-green-300/60", "text-green-900");
      result.innerHTML = "Message sent";

      result.classList.remove("invisible");

      form.reset();
    });
  }
</script>
